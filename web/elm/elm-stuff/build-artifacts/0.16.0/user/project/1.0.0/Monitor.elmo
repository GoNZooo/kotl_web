Elm.Monitor = Elm.Monitor || {};
Elm.Monitor.make = function (_elm) {
   "use strict";
   _elm.Monitor = _elm.Monitor || {};
   if (_elm.Monitor.values) return _elm.Monitor.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm);
   var _op = {};
   var view = F2(function (address,model) {    return $Html.text($Basics.toString(model));});
   var NoOp = {ctor: "NoOp"};
   var Monitoree = F2(function (a,b) {    return {name: a,status: b};});
   var Down = {ctor: "Down"};
   var Up = {ctor: "Up"};
   var initialModel = _U.list([{name: "node",status: Up}]);
   var update = F2(function (action,model) {    var _p0 = action;return initialModel;});
   var main = $StartApp$Simple.start({model: initialModel,update: update,view: view});
   return _elm.Monitor.values = {_op: _op,Up: Up,Down: Down,Monitoree: Monitoree,initialModel: initialModel,NoOp: NoOp,update: update,view: view,main: main};
};